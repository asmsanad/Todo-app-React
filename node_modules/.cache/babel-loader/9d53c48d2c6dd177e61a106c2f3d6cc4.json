{"ast":null,"code":"var _jsxFileName = \"/Users/sanad/Desktop/counter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './index.css';\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [list, setList] = React.useState([]);\n  const [id, setid] = React.useState(0);\n  const todo = {};\n\n  const add = () => {\n    if (document.getElementById('gettext').value === null) {\n      console.log(null);\n    } else {\n      todo.id = id;\n      todo.status = false;\n      todo.text = document.getElementById('gettext').value;\n      setList([...list, todo]);\n      setid(id + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"title\",\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"gettext\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), list.map(todo => {\n      const {\n        id\n      } = todo;\n      return /*#__PURE__*/_jsxDEV(Todo, { ...todo\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MfRV4D+HTTRMJup1c3eVjvB6Xng=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sanad/Desktop/counter/src/App.js"],"names":["React","Todo","App","list","setList","useState","id","setid","todo","add","document","getElementById","value","console","log","status","text","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcP,KAAK,CAACK,QAAN,CAAe,CAAf,CAApB;AACA,QAAMG,IAAI,GAAG,EAAb;;AAEA,QAAMC,GAAG,GAAG,MAAI;AACd,QAAIC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,KAA6C,IAAjD,EAAsD;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAFD,MAEK;AACHN,MAAAA,IAAI,CAACF,EAAL,GAAUA,EAAV;AACAE,MAAAA,IAAI,CAACO,MAAL,GAAc,KAAd;AACAP,MAAAA,IAAI,CAACQ,IAAL,GAAYN,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAA/C;AACAR,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAASK,IAAT,CAAD,CAAP;AACAD,MAAAA,KAAK,CAACD,EAAE,GAAC,CAAJ,CAAL;AACD;AAEF,GAXD;;AAcA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEG,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAMIN,IAAI,CAACc,GAAL,CAAST,IAAI,IAAI;AACf,YAAM;AAACF,QAAAA;AAAD,UAAME,IAAZ;AACA,0BAAO,QAAC,IAAD,OAAmBA;AAAnB,SAAWF,EAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHD,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlCQJ,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport './index.css';\nimport Todo from \"./Todo\";\n\nfunction App() {\n  const [list, setList] = React.useState([]);\n  const [id, setid] = React.useState(0);\n  const todo = {};\n\n  const add = ()=>{\n    if (document.getElementById('gettext').value === null){\n      console.log(null);\n    }else{\n      todo.id = id;\n      todo.status = false;\n      todo.text = document.getElementById('gettext').value;\n      setList([...list,todo]);\n      setid(id+1);\n    }\n    \n  }\n\n\n  return (\n    <React.Fragment>\n      <h1 id=\"title\">Todo App</h1>\n      <input id=\"gettext\"></input>\n      <button onClick={add}>Add</button>\n\n      {\n        list.map(todo => {\n          const {id} =todo;\n          return <Todo key={id} {...todo}/> \n        }\n      )}\n      \n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}